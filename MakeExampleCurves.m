% Small collection of curves that I have used to make animations. Feel free
% to use them for exploring.

%%
% line
Line = { LineToBezier([0,0]', [1,0]'), ...
  LineToBezier([1,0]', [-1,0]'),...
  LineToBezier([-1,0]', [0,0]')};

%%
% square with curve
BittenSquare = {[...
  [-1, 0]',...
  [-1, 0]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 0, 1]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [ 0, 1]'...
  ],...
  LineToBezier([ 0, 1]',[-1, 1]'),...
  LineToBezier([-1, 1]',[-1,-1]'),...
  LineToBezier([-1,-1]',[ 0,-1]'),...
  [...
  [ 0,-1]',...
  [ 0,-1]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [-1, 0]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [-1, 0]'...
  ]};

%%
% letter C from circles
LetterC = {[...
  [-3,0]',...
  [-3,0]'+3*[0,(4/3)*tan(pi/8)]',...
  [0,3]'+3*[-(4/3)*tan(pi/8),0]',...
  [0,3]'...
  ],[...
  [0,3]',...
  [0,3]'+[(4/3)*tan(pi/4),0]',...
  [0,1]'+[(4/3)*tan(pi/4),0]',...
  [0,1]'...
  ],[...
  [0,1]',...
  [0,1]'+[-(4/3)*tan(pi/4),0]',...
  [0,-1]'+[-(4/3)*tan(pi/4),0]',...
  [0,-1]'...
  ],[...
  [0,-1]',...
  [0,-1]'+[(4/3)*tan(pi/4),0]',...
  [0,-3]'+[(4/3)*tan(pi/4),0]',...
  [0,-3]'...
  ],[...
  [0,-3]',...
  [0,-3]'+3*[-(4/3)*tan(pi/8),0]',...
  [-3,0]'+3*[0,-(4/3)*tan(pi/8)]',...
  [-3,0]'...
  ]};

%%
% cilinder
% cylinder shape
Cylinder1_1 = {[...
  [ 0, pi+1]', ...
  [ 0, pi+1]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 1, pi  ]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 1, pi  ]'...
  ],...
  LineToBezier([1,pi]',[1,0]'),...
  [...
  [ 1, 0]',...
  [ 1, 0]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [ 0,-1]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 0,-1]'...
  ],[...
  [ 0,-1]'...
  [ 0,-1]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [-1, 0]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [-1, 0]'...
  ],...
  LineToBezier([-1,0]', [-1,pi]'),...
  [...
  [-1,pi  ]',...
  [-1,pi  ]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 0,pi+1]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [ 0,pi+1]'...
  ]};

%%
% cilinder
% cylinder shape
Cylinder1_2 = {[...
  [ 0, pi/2+1]', ...
  [ 0, pi/2+1]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 1, pi/2  ]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 1, pi/2  ]'...
  ],...
  LineToBezier([1,pi/2]',[1,0]'),...
  [...
  [ 1, 0]',...
  [ 1, 0]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [ 0,-1]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 0,-1]'...
  ],[...
  [ 0,-1]'...
  [ 0,-1]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [-1, 0]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [-1, 0]'...
  ],...
  LineToBezier([-1,0]', [-1,pi/2]'),...
  [...
  [-1,pi/2  ]',...
  [-1,pi/2  ]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 0,pi/2+1]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [ 0,pi/2+1]'...
  ]};

%%
% eye
R = [cos(pi/4), -sin(pi/4); sin(pi/4), cos(pi/4)];
VertEye = {R*[...
  [-1,0]',...
  [-1,(4/3)*tan(pi/8)]',...
  [-(4/3)*tan(pi/8),1]',...
  [0,1]'...
  ],R*[...
  [0,1]',...
  [0.5,1]',...
  [0.5,1]',...
  [1,1]'...
  ],R*[...
  [1,1]',...
  [1,0.5]',...
  [1,0.5]',...
  [1,0]'...
  ],R*[...
  [1,0]',...
  [1,-(4/3)*tan(pi/8)]',...
  [(4/3)*tan(pi/8),-1]',...
  [0,-1]'...
  ],R*[
  [   0,-1]',...
  [-0.5,-1]',...
  [-0.5,-1]',...
  [  -1,-1]',...
  ],R*[...
  [-1,-1]',...
  [-1,-0.5]',...
  [-1,-0.5]',...
  [-1,0]'...
  ]};
[c1,c2] = HalfBezierSingle(VertEye{1});
VertEye{1} = c2;
VertEye{end+1} = c1;

clear R

%%
% circle with small bump to be formed
BumpCircle = {[...
  [0,-1]',...
  [0,-1]'+[-1,0]'*(4/3)*tan(pi/8),...
  [-1,0]'+[0,-1]'*(4/3)*tan(pi/8),...
  [-1,0]'
  ],[...
  [-1,0]',...
  [-1,0]'+[0,1]'*(4/3)*tan(pi/8),...
  [0,1]'+[-1,0]'*(4/3)*tan(pi/8),...
  [0,1]'...
  ],...
  LineToBezier([0,1]',[0,2]'),...
  LineToBezier([0,2]',[0,1]'),...
  [...
  [0,1]',...
  [0,1]'+[1,0]'*(4/3)*tan(pi/8),...
  [1,0]'+[0,1]'*(4/3)*tan(pi/8),...
  [1,0]'...
  ],[...
  [1,0]',...
  [1,0]'+[0,-1]'*(4/3)*tan(pi/8),...
  [0,-1]'+[1,0]'*(4/3)*tan(pi/8),...
  [0,-1]'
  ]};

%%
% semicircles S
LetterS = {[...
  [0,-1]',...
  [-(8/3)*tan(pi/4)',-1]',...
  [-(8/3)*tan(pi/4)',1]',...
  [0,1]'...
  ],[...
  [0,1]',...
  [-(4/3)*tan(pi/4)',1]',...
  [-(4/3)*tan(pi/4)',0]',...
  [0,0]'...
  ],[...
  [0,0]',...
  [(8/3)*tan(pi/4)',0]',...
  [(8/3)*tan(pi/4)',-2]',...
  [0,-2]'...
  ],[...
  [0,-2]'...
  [(4/3)*tan(pi/4)',-2]',...
  [(4/3)*tan(pi/4)',-1]',...
  [0,-1]'...
  ]};

%%
% heart
Heart = {[...
  [-2,0]',...
  [-2,(4/3)*tan(pi/4)]',...
  [0,(4/3)*tan(pi/4)]',...
  [0,0]'...
  ],[...
  [0,0]',...
  [0,(4/3)*tan(pi/4)]',...
  [2,(4/3)*tan(pi/4)]',...
  [2,0]',...
  ],[...
  [2,0]',...
  [2,-2*(4/3)*tan(pi/16)]',...
  [2/sqrt(2),-2/sqrt(2)]'+2*[1/sqrt(2),1/sqrt(2)]'*(4/3)*tan(pi/16),...
  [2/sqrt(2),-2/sqrt(2)]'...
  ],[...
  [2/sqrt(2),-2/sqrt(2)]',...
  [2/sqrt(2),-2/sqrt(2)]'+[-.5,-.5]',...
  [0,-4/sqrt(2)]'+[.5,.5]',...
  [0,-4/sqrt(2)]'...
  ],[...
  [0,-4/sqrt(2)]',...
  [0,-4/sqrt(2)]'+[-.5,.5]',...
  [-2/sqrt(2),-2/sqrt(2)]'+[.5,-.5]',...
  [-2/sqrt(2),-2/sqrt(2)]',...
  ],[...
  [-2/sqrt(2),-2/sqrt(2)]'...
  [-2/sqrt(2),-2/sqrt(2)]'+2*[-1/sqrt(2),1/sqrt(2)]'*(4/3)*tan(pi/16),...
  [-2,-2*(4/3)*tan(pi/16)]',...
  [-2,0]'...
  ]};

%%
% simple 4-spike star
[c1, c2] = HalfBezierSingle([...
  [-1,0]',...
  [-1,0]'+[1, 0]'*(4/3)*tan(pi/8), ...
  [ 0,1]'+[0,-1]'*(4/3)*tan(pi/8), ...
  [0,1]'
  ]);
Astroid4 = {c2,[...
  [0,1]',...
  [0,1]'+[0,-1]'*(4/3)*tan(pi/8), ...
  [1,0]'+[-1,0]'*(4/3)*tan(pi/8), ...
  [1,0]'
  ],[...
  [1,0]',...
  [1,0]'+[-1,0]'*(4/3)*tan(pi/8), ...
  [0,-1]'+[0,1]'*(4/3)*tan(pi/8), ...
  [0,-1]'
  ],[...
  [0,-1]',...
  [0,-1]'+[0,1]'*(4/3)*tan(pi/8), ...
  [-1,0]'+[1,0]'*(4/3)*tan(pi/8), ...
  [-1,0]'
  ], c1};

clear c1 c2

%%
% rotated square
RotatedSquare = {...
  LineToBezier([-1,1]',[0,2]'), ...
  LineToBezier([0,2]',[2,0]'), ...
  LineToBezier([2,0]',[0,-2]'), ...
  LineToBezier([0,-2]',[-2,0]'), ...
  LineToBezier([-2,0]',[-1,1]') ...
  };

%%
% unit circle with inverted stuff
R = [cos(3*pi/4), -sin(3*pi/4); sin(3*pi/4), cos(3*pi/4)];
LetterI = {R*[...
  [-1,0]',...
  [-1,(4/3)*tan(pi/8)]',...
  [-(4/3)*tan(pi/8),1]',...
  [0,1]'...
  ],R*[...
  [0,1]',...
  [0,1-(4/3)*tan(pi/8)]',...
  [1-(4/3)*tan(pi/8),0]',...
  [1,0]'...
  ],R*[...
  [1,0]',...
  [1,-(4/3)*tan(pi/8)]',...
  [(4/3)*tan(pi/8),-1]',...
  [0,-1]'...
  ],R*[
  [0,-1]',...
  [0,-1+(4/3)*tan(pi/8)]',...
  [-1+(4/3)*tan(pi/8),0]',...
  [-1,0]'
  ]};
% change starting point (artistic choice)
[c1,c2] = HalfBezierSingle(LetterI{1});
LetterI{1} = c2;
LetterI{end+1} = c1;

clear R c1 c2

%%
% semicircle
Semicircle = {[...
  [-1,0]',...
  [-1,(4/3)*tan(pi/8)]',...
  [-(4/3)*tan(pi/8),1]',...
  [0,1]'...
  ],[...
  [0,1]',...
  [0,0.5]',...
  [0,-0.5]',...
  [0,-1]'...
  ],[...
  [0,-1]',...
  [-(4/3)*tan(pi/8),-1]',...
  [-1,-(4/3)*tan(pi/8)]',...
  [-1,0]'...
  ]};

%%
% number 8 from two circles
Number8 = {[...
  [0,-1]',...
  [0,-1]'+[-1,0]'*(4/3)*tan(pi/8),...
  [-1,0]'+[0,-1]'*(4/3)*tan(pi/8),...
  [-1,0]'
  ],[...
  [-1,0]',...
  [-1,0]'+[0,1]'*(4/3)*tan(pi/8),...
  [0,1]'+[-1,0]'*(4/3)*tan(pi/8),...
  [0,1]'...
  ],...
  [...
  [0,1]',...
  [0,1]'+[-1,0]'*(4/3)*tan(pi/8),...
  [-1,2]'+[0,-1]'*(4/3)*tan(pi/8),...
  [-1,2]'
  ],[...
  [-1,2]',...
  [-1,2]'+[0,1]'*(4/3)*tan(pi/8),...
  [0,3]'+[-1,0]'*(4/3)*tan(pi/8),...
  [0,3]'...
  ],...
  [...
  [0,3]',...
  [0,3]'+[1,0]'*(4/3)*tan(pi/8),...
  [1,2]'+[0,1]'*(4/3)*tan(pi/8),...
  [1,2]'...
  ],[...
  [1,2]',...
  [1,2]'+[0,-1]'*(4/3)*tan(pi/8),...
  [0,1]'+[1,0]'*(4/3)*tan(pi/8),...
  [0,1]'
  ],...
  [...
  [0,1]',...
  [0,1]'+[1,0]'*(4/3)*tan(pi/8),...
  [1,0]'+[0,1]'*(4/3)*tan(pi/8),...
  [1,0]'...
  ],[...
  [1,0]',...
  [1,0]'+[0,-1]'*(4/3)*tan(pi/8),...
  [0,-1]'+[1,0]'*(4/3)*tan(pi/8),...
  [0,-1]'
  ]};

%%
% Twisted number 8
Twisted8 = {[...
  [ 0,-4]',...
  [ 0,-4]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [-1,-3]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [-1,-3]'
  ],[...
  [-1,-3]',...
  [-1,-3]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 0,-2]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [ 0,-2]'...
  ],[...
  [ 0,-2]',...
  [ 0,-2]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 1,-1]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [ 1,-1]'...
  ],[...
  [ 1,-1]',...
  [ 1,-1]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 0, 0]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 0, 0]'...
  ],[...
  [ 0, 0]',...
  [ 0, 0]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [-1,-1]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [-1,-1]'...
  ],[...
  [-1,-1]',...
  [-1,-1]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [ 0,-2]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [ 0,-2]'...
  ],[...
  [ 0,-2]',...
  [ 0,-2]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 1,-3]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 1,-3]'...
  ],[...
  [ 1,-3]',...
  [ 1,-3]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [ 0,-4]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 0,-4]'...
  ]};

%%
% twisted 8, but the lower ball is twice the size

Twisted8_2 = {[...
  [ 0,-2]',...
  [ 0,-2]'+[ 1, 0]'*(4/3)*tan(pi/8)*2,...
  [ 2, 0]'+[ 0,-1]'*(4/3)*tan(pi/8)*2,...
  [ 2, 0]'...
  ],[...
  [ 2, 0]',...
  [ 2, 0]'+[ 0, 1]'*(4/3)*tan(pi/8)*2,...
  [ 0, 2]'+[ 1, 0]'*(4/3)*tan(pi/8)*2,...
  [ 0, 2]'...
  ],[...
  [ 0, 2]',...
  [ 0, 2]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [-1, 3]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [-1, 3]'
  ],[...
  [-1, 3]',...
  [-1, 3]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 0, 4]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [ 0, 4]'...
  ],[...
  [ 0, 4]',...
  [ 0, 4]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 1, 3]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 1, 3]'...
  ],[...
  [ 1, 3]',...
  [ 1, 3]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [ 0, 2]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 0, 2]'...
  ],[...
  [ 0, 2]',...
  [ 0, 2]'+[-1, 0]'*(4/3)*tan(pi/8)*2,...
  [-2, 0]'+[ 0, 1]'*(4/3)*tan(pi/8)*2,...
  [-2, 0]'...
  ],[...
  [-2, 0]',...
  [-2, 0]'+[ 0,-1]'*(4/3)*tan(pi/8)*2,...
  [ 0,-2]'+[-1, 0]'*(4/3)*tan(pi/8)*2,...
  [ 0,-2]'...
  ]};

%%
% rotated Guinivere
Guinivere = {[...
  [ 0,-4]',...
  [ 0,-4]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [-1,-3]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [-1,-3]'
  ],[...
  [-1,-3]',...
  [-1,-3]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 0,-2]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [ 0,-2]'...
  ],[...
  [ 0,-2]',...
  [ 0,-2]'+[ 1, 0]'*(4/3)*tan(pi/8)*2,...
  [ 2, 0]'+[ 0,-1]'*(4/3)*tan(pi/8)*2,...
  [ 2, 0]'...
  ],[...
  [ 2, 0]',...
  [ 2, 0]'+[ 0, 1]'*(4/3)*tan(pi/8)*2,...
  [ 0, 2]'+[ 1, 0]'*(4/3)*tan(pi/8)*2,...
  [ 0, 2]'...
  ],[...
  [ 0, 2]',...
  [ 0, 2]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [-1, 3]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [-1, 3]'
  ],[...
  [-1, 3]',...
  [-1, 3]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 0, 4]'+[-1, 0]'*(4/3)*tan(pi/8),...
  [ 0, 4]'...
  ],[...
  [ 0, 4]',...
  [ 0, 4]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 1, 3]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 1, 3]'...
  ],[...
  [ 1, 3]',...
  [ 1, 3]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [ 0, 2]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 0, 2]'...
  ],[...
  [ 0, 2]',...
  [ 0, 2]'+[-1, 0]'*(4/3)*tan(pi/8)*2,...
  [-2, 0]'+[ 0, 1]'*(4/3)*tan(pi/8)*2,...
  [-2, 0]'...
  ],[...
  [-2, 0]',...
  [-2, 0]'+[ 0,-1]'*(4/3)*tan(pi/8)*2,...
  [ 0,-2]'+[-1, 0]'*(4/3)*tan(pi/8)*2,...
  [ 0,-2]'...
  ],[...
  [ 0,-2]',...
  [ 0,-2]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 1,-3]'+[ 0, 1]'*(4/3)*tan(pi/8),...
  [ 1,-3]'...
  ],[...
  [ 1,-3]',...
  [ 1,-3]'+[ 0,-1]'*(4/3)*tan(pi/8),...
  [ 0,-4]'+[ 1, 0]'*(4/3)*tan(pi/8),...
  [ 0,-4]'...
  ]};

%%
% bold letter B
LetterB = {...
  LineToBezier([-1,1]',[-1,3]'),...
  LineToBezier([-1,3]',[0,3]'),...
  [...
  [0,3]',...
  [0,3]'+[1,0]'*(4/3)*tan(pi/8),...
  [1,2]'+[0,1]'*(4/3)*tan(pi/8),...
  [1,2]'...
  ],[...
  [1,2]',...
  [1,2]'+[0,-1]'*(4/3)*tan(pi/8),...
  [0,1]'+[1,0]'*(4/3)*tan(pi/8),...
  [0,1]'
  ],[...
  [0,1]',...
  [0,1]'+[1,0]'*(4/3)*tan(pi/8),...
  [1,0]'+[0,1]'*(4/3)*tan(pi/8),...
  [1,0]'...
  ],[...
  [1,0]',...
  [1,0]'+[0,-1]'*(4/3)*tan(pi/8),...
  [0,-1]'+[1,0]'*(4/3)*tan(pi/8),...
  [0,-1]'
  ],...
  LineToBezier([0,-1]',[-1,-1]'),...
  LineToBezier([-1,-1]',[-1,1]')...
  };


%%
% self-intersecting shcape
xx = 1;
yy = 3;
[c1, c2] = HalfBezierSingle([1,0; 1+1+xx, -yy; -1-1-xx, -yy; -1,0]');
SelfIntersect2 = {c2,[...
  -1,0; 1+2*xx, 2*yy; -1-2*xx, 2*yy; 1, 0 ...
  ]',...
  c1};

clear xx yy c1 c2

%%
% self-intersecting circle
SelfIntersectCircle = {[...
  [0,-1]',...
  [0,-1]'+[-1,0]'*(4/3)*tan(pi/8),...
  [-1,0]'+[0,-1]'*(4/3)*tan(pi/8),...
  [-1,0]'...
  ],[...
  [-1,0]',...
  [-1,0]'+[0,1]'*(4/3)*tan(pi/8),...
  [1,2]'+[0,-1]'*(4/3)*tan(pi/8),...
  [1,2]'
  ],[...
  [1,2]',...
  [1,2]'+[0,1]'*(4/3)*tan(pi/8),...
  [0,3]'+[1,0]'*(4/3)*tan(pi/8),...
  [0,3]'
  ],[...
  [0,3]',...
  [0,3]'+[-1,0]'*(4/3)*tan(pi/8),...
  [-1,2]'+[0,1]'*(4/3)*tan(pi/8),...
  [-1,2]'...
  ],[...
  [-1,2]',...
  [-1,2]'+[0,-1]'*(4/3)*tan(pi/8),...
  [1,0]'+[0,1]'*(4/3)*tan(pi/8),...
  [1,0]'...
  ],[...
  [1,0]',...
  [1, 0]'+[0,-1]'*(4/3)*tan(pi/8),...
  [0,-1]'+[1, 0]'*(4/3)*tan(pi/8),...
  [0,-1]'
  ]};
SelfIntersectCircle = FlipBezierAll(SelfIntersectCircle);

%%
% up V with circle borders
R = [cos(pi/4), -sin(pi/4); sin(pi/4), cos(pi/4)];
LetterV = {...
  R*LineToBezier([0,1]', [1,1]'), ...
  R*LineToBezier([1,1]', [1,-1]'), ...
  R*[...
  [1,-1]',...
  [1,-1]'+[0,-1]'*(2/3)*tan(pi/4),...
  [0,-1]'+[0,-1]'*(2/3)*tan(pi/4),...
  [0,-1]'
  ],...
  R*LineToBezier([0,-1]', [0,0]'), ...
  R*LineToBezier([0,0]', [-1,0]'), ...
  R*[...
  [-1,0]',...
  [-1,0]'+[-1,0]'*(2/3)*tan(pi/4),...
  [-1,1]'+[-1,0]'*(2/3)*tan(pi/4),...
  [-1,1]'
  ],...
  R*LineToBezier([-1,1]', [0,1]'), ...
  };

clear R

%%
% hexagon

% Define the hexagon control points
hexagonPts = [cos(-(0:5)*2*pi/6+pi/2); sin(-(0:5)*2*pi/6+pi/2)] * 2; 
pt0 = (hexagonPts(:,1)+hexagonPts(:,6))/2;

Hexagon = {...
  LineToBezier(pt0, hexagonPts(:,1)),...
  LineToBezier(hexagonPts(:,1), hexagonPts(:,2)),...
  LineToBezier(hexagonPts(:,2), hexagonPts(:,3)),...
  LineToBezier(hexagonPts(:,3), hexagonPts(:,4)),...
  LineToBezier(hexagonPts(:,4), hexagonPts(:,5)),...
  LineToBezier(hexagonPts(:,5), hexagonPts(:,6)),...
  LineToBezier(hexagonPts(:,6), pt0),...
  };

clear hexagonPts pt0

%%
%star with 5 spikes
aang   = -(0:(2*pi/5):(2*pi));
aang(end) = [];
PtsOut = [cos(aang + pi/2); sin(aang + pi/2)]*2;
PtsInn = [cos(aang + pi/2 - pi/5); sin(aang + pi/2 - pi/5)];

PtsAll = zeros(2,2*size(PtsInn,2)+1);
for i = 1:size(PtsInn,2)
  PtsAll(:,2*i-1) = PtsOut(:,i);
  PtsAll(:,2*i  ) = PtsInn(:,i);
end
PtsAll(:,end) = PtsOut(:,1);

Star5 = {};
for i = 1:(size(PtsAll,2)-1)
  CurrCurve = zeros(2,4);
  CurrCurve(:,1) = PtsAll(:,i);
  CurrCurve(:,2) = (2/3)*PtsAll(:,i)+(1/3)*PtsAll(:,i+1);
  CurrCurve(:,3) = (1/3)*PtsAll(:,i)+(2/3)*PtsAll(:,i+1);
  CurrCurve(:,4) = PtsAll(:,i+1);
  %
  Star5{end+1} = CurrCurve;
end

Star5_backup = Star5;
[mid1, mid2] = HalfBezierSingle( Star5{1} );
Star5 = { mid1, mid2 };
for i = 2:size(Star5_backup,2)
  Star5{end+1} = Star5_backup{i};
end

clear aang CurrCurve i mid1 mid2 PtsAll PtsInn PtsOut Star5_backup

%%
% blobby star with 8 spikes
% unit circle
Blob8 = {[...
  [-1,0]',...
  [-1,(4/3)*tan(pi/8)]',...
  [-(4/3)*tan(pi/8),1]',...
  [0,1]'...
  ],[...
  [0,1]',...
  [1-(4/3)*tan(pi/8),1]',...
  [1,(4/3)*tan(pi/8)]',...
  [1,0]'...
  ],[...
  [1,0]',...
  [1,-(4/3)*tan(pi/8)]',...
  [(4/3)*tan(pi/8),-1]',...
  [0,-1]'...
  ],[
  [0,-1]',...
  [-(4/3)*tan(pi/8),-1]',...
  [-1,-(4/3)*tan(pi/8)]',...
  [-1,0]'
  ]};

% subdivide
for iter = 1:2
Blob8_backup = Blob8;
Blob8 = {};
for i = 1:size(Blob8_backup,2)
  [c1, c2] = HalfBezierSingle(Blob8_backup{i});
  Blob8{end+1} = c1;
  Blob8{end+1} = c2;
end
end

% make the wobly thingy
for i = 1:(size(Blob8,2)/2)
  CurrCurve = Blob8{2*i-1};
  CurrDisplace = (1-5/6)*CurrCurve(:,1);
  CurrCurve(:,[1,2]) = CurrCurve(:,[1,2]) - CurrDisplace;
  CurrDisplace = (7/6-1)*CurrCurve(:,4);
  CurrCurve(:,[3,4]) = CurrCurve(:,[3,4]) + CurrDisplace;
  Blob8{2*i-1} = CurrCurve;
  %
  %
  CurrCurve = Blob8{2*i};
  CurrDisplace = (7/6-1)*CurrCurve(:,1);
  CurrCurve(:,[1,2]) = CurrCurve(:,[1,2]) + CurrDisplace;
  CurrDisplace = (1-5/6)*CurrCurve(:,4);
  CurrCurve(:,[3,4]) = CurrCurve(:,[3,4]) - CurrDisplace;
  Blob8{2*i} = CurrCurve;
end

clear Blob8_backup c1 c2 CurrCurve CurrDisplace i iter

%%
% 5 eyes thingy
aang = -(0:(2*pi/5):2*pi)+pi/2+pi/5;
hex_pts = [cos(aang); sin(aang)]*cot(pi/5);

Angel5 = {};
for i = 1:5
  CurrCtrl = zeros(2,4);
  CurrCtrl(:,1) = hex_pts(:,i  );
  CurrCtrl(:,2) = hex_pts(:,i  )*(1 +(4/3)*tan(7*pi/5) );
  CurrCtrl(:,3) = hex_pts(:,i+1)*(1 +(4/3)*tan(7*pi/5) );
  CurrCtrl(:,4) = hex_pts(:,i+1);
  Angel5{end+1} = CurrCtrl;
end

% change starting point (artistic choice)
[c1,c2] = HalfBezierSingle(Angel5{1});
Angel5{1} = c2;
Angel5{end+1} = c1;

clear aang hex_pts CurrCtrl c1 c2 i

%%
% 6 eyes thingy
aang = -(0:(2*pi/6):2*pi)+pi/2+pi/6;
hex_pts = [cos(aang); sin(aang)]*cot(pi/6);

Angel6 = {};
for i = 1:6
  CurrCtrl = zeros(2,4);
  CurrCtrl(:,1) = hex_pts(:,i  );
  CurrCtrl(:,2) = hex_pts(:,i  )*(1 +(4/3)*tan(pi/3) );
  CurrCtrl(:,3) = hex_pts(:,i+1)*(1 +(4/3)*tan(pi/3) );
  CurrCtrl(:,4) = hex_pts(:,i+1);
  Angel6{end+1} = CurrCtrl;
end

% change starting point (artistic choice)
[c1,c2] = HalfBezierSingle(Angel6{1});
Angel6{1} = c2;
Angel6{end+1} = c1;

clear aang hex_pts CurrCtrl c1 c2 i

%%
% 6 hexagon circles stitched together
aang = -(0:(2*pi/6):2*pi)+pi/2+pi/6;
hex_pts = [cos(aang); sin(aang)]*cot(pi/6);

Balls6 = {};
for i = 1:6
  CurrCtrl = zeros(2,4);
  CurrCtrl(:,1) = hex_pts(:,i  );
  CurrCtrl(:,2) = hex_pts(:,i  )*(1 +(4/3)*tan(pi/3) );
  CurrCtrl(:,3) = hex_pts(:,i+1)*(1 +(4/3)*tan(pi/3) );
  CurrCtrl(:,4) = hex_pts(:,i+1);
  Balls6{end+1} = CurrCtrl;
end

% change starting point (artistic choice)
[c1,c2] = HalfBezierSingle(Balls6{1});
Balls6{1} = c2;
Balls6{end+1} = c1;

clear aang hex_pts CurrCtrl c1 c2 i

%%
% error on fidget, maybe profitable
aang = -(0:(2*pi/6):2*pi)+pi/2+pi/6;
hex_pts = [cos(aang); sin(aang)]*cot(pi/6);

Fidget3 = {};
for i = 1:6
  CurrCtrl = zeros(2,4);
  CurrCtrl(:,1) = hex_pts(:,i  );
  CurrCtrl(:,2) = hex_pts(:,i  )*(1 +(4/3)*tan(pi/3)*(-1)^i );
  CurrCtrl(:,3) = hex_pts(:,i+1)*(1 +(4/3)*tan(pi/3)*(-1)^i );
  CurrCtrl(:,4) = hex_pts(:,i+1);
  Fidget3{end+1} = CurrCtrl;
end

% change starting point (artistic choice)
[c1,c2] = HalfBezierSingle(Fidget3{1});
Fidget3{1} = c2;
Fidget3{end+1} = c1;

clear aang hex_pts CurrCtrl c1 c2 i

%%
% 3 fidget spinner
aang = -(0:(2*pi/6):2*pi)+pi/2+pi/6;
hex_pts = [cos(aang); sin(aang)]*cot(pi/6);

Fidget3 = {};
for i = 1:6
  CurrCtrl = zeros(2,4);
  CurrCtrl(:,1) = hex_pts(:,i  );
  CurrCtrl(:,2) = hex_pts(:,i  )*(1 -(4/3)*tan(pi/6)*(-1)^i );
  CurrCtrl(:,3) = hex_pts(:,i+1)*(1 -(4/3)*tan(pi/6)*(-1)^i );
  CurrCtrl(:,4) = hex_pts(:,i+1);
  Fidget3{end+1} = CurrCtrl;
end

% change starting point (artistic choice)
[c1,c2] = HalfBezierSingle(Fidget3{1});
Fidget3{1} = c2;
Fidget3{end+1} = c1;

clear aang hex_pts CurrCtrl c1 c2 i

%%
% trefoil




%%
save('ExampleCurves.mat')